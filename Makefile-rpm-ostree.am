# Copyright (C) 2013 Colin Walters <walters@verbum.org>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

noinst_LTLIBRARIES += librpmostreeinternals.la

librpmostreeinternals_la_SOURCES = \
    src/app/libmain.cxx \
	src/app/rpmostree-builtins.h \
	src/app/rpmostree-db-builtins.h \
	src/app/rpmostree-compose-builtins.h \
	src/app/rpmostree-builtin-upgrade.cxx \
	src/app/rpmostree-builtin-rollback.cxx \
	src/app/rpmostree-builtin-deploy.cxx \
	src/app/rpmostree-builtin-reload.cxx \
	src/app/rpmostree-builtin-rebase.cxx \
	src/app/rpmostree-builtin-cancel.cxx \
	src/app/rpmostree-builtin-cleanup.cxx \
	src/app/rpmostree-builtin-initramfs.cxx \
	src/app/rpmostree-builtin-initramfs-etc.cxx \
	src/app/rpmostree-builtin-applylive.cxx \
	src/app/rpmostree-builtin-override.cxx \
	src/app/rpmostree-builtin-refresh-md.cxx \
	src/app/rpmostree-builtin-reset.cxx \
	src/app/rpmostree-pkg-builtins.cxx \
	src/app/rpmostree-builtin-status.cxx \
	src/app/rpmostree-builtin-ex.cxx \
	src/app/rpmostree-builtin-testutils.cxx \
	src/app/rpmostree-builtin-shlib-backend.cxx \
	src/app/rpmostree-builtin-db.cxx \
	src/app/rpmostree-builtin-start-daemon.cxx \
	src/app/rpmostree-builtin-finalize-deployment.cxx \
	src/app/rpmostree-db-builtin-diff.cxx \
	src/app/rpmostree-db-builtin-list.cxx \
	src/app/rpmostree-db-builtin-version.cxx \
	src/app/rpmostree-clientlib.cxx \
	src/app/rpmostree-clientlib.h \
	src/app/rpmostree-override-builtins.h \
	src/app/rpmostree-override-builtins.cxx \
	src/app/rpmostree-libbuiltin.cxx \
	src/app/rpmostree-libbuiltin.h \
	src/app/rpmostree-polkit-agent.cxx \
	src/app/rpmostree-polkit-agent.h \
	src/app/rpmostree-builtin-kargs.cxx \
	src/app/rpmostree-compose-builtin-tree.cxx \
	src/app/rpmostree-composeutil.cxx \
	src/app/rpmostree-composeutil.h \
	src/app/rpmostree-builtin-compose.cxx \
	src/app/rpmostree-builtin-rebuild.cxx \
	$(librpmostreed_sources) \
	$(librpmostreepriv_sources) \
	$(librpmostree_1_la_SOURCES) \
	$(NULL)

nodist_librpmostreeinternals_la_SOURCES = $(dbus_built_sources) $(nodist_librpmostreepriv_sources)

rpmostree_common_cflags = -I$(srcdir)/src/app -I$(srcdir)/src/daemon \
	-I$(srcdir)/src/lib -I$(srcdir)/src/libpriv -I$(libglnx_srcpath) \
	-DG_LOG_DOMAIN=\"rpm-ostreed\" \
	-DLIBDIR=\"$(libdir)\" -DPKGLIBDIR=\"$(pkglibdir)\" \
	-I $(top_srcdir)/libdnf \
	-D_RPMOSTREE_EXTERN= \
	$(PKGDEP_LIBRPMOSTREE_CFLAGS) $(PKGDEP_RPMOSTREE_CFLAGS)
rpmostree_bin_common_cflags = $(rpmostree_common_cflags)
rpmostree_common_libs = libglnx.la librpmostreecxxrs.la

rpmostree_bin_common_libs = librpmostreeinternals.la $(rpmostree_common_libs)
librpmostreeinternals_la_CFLAGS = $(AM_CFLAGS) $(rpmostree_common_cflags)
# Note for now we only inject the sanitizer flags into our static library,
# because doing ASAN for a shared library is trickier.
librpmostreeinternals_la_CXXFLAGS = $(AM_CXXFLAGS) $(sanitizer_flags) $(rpmostree_common_cflags)
librpmostreeinternals_la_LIBADD = $(rpmostree_common_libs)

privdatadir=$(pkglibdir)
privdata_DATA = src/app/rpm-ostree-0-integration.conf

# Propagate automake verbose mode
cargo_build = $(cargo) build $(if $(subst 0,,$(V)),--verbose,)
if BUILDOPT_PREBUILT_BINDINGS
cargo_build += "--offline"
endif
if BUILDOPT_BIN_UNIT_TESTS
cargo_build += --features bin-unit-tests
endif
if BUILDOPT_ASAN
cargo_build += --features sanitizers
endif

cargo_build += $(if $(RUST_FEATURES),--features $(RUST_FEATURES))

if RUST_DEBUG
cargo_target_dir=debug
else
cargo_target_dir=release
endif
# FIXME - build all this code in a rpmostree-sys crate, or just move all the C/C++ build
# to Rust.  Currently this forces build system serialization
cargo-build: librpmostreeinternals.la
	$(cargo_build) $(CARGO_RELEASE_ARGS)
	ln -sfr target/$(cargo_target_dir)/rpm-ostree rpm-ostree
CLEANFILES += rpm-ostree
.PHONY: cargo-build
ALL_LOCAL_HOOKS += cargo-build

# cxx.rs - to regenerate this, run `make -f Makefile.bindings bindings`
binding_generated_sources = rpmostree-cxxrs.h rpmostree-cxxrs.cxx rust/cxx.h

noinst_LTLIBRARIES += librpmostreecxxrs.la
librpmostreecxxrs_la_SOURCES = rpmostree-cxxrs.h rpmostree-cxxrs.cxx
# Suppress missing-declarations because https://github.com/dtolnay/cxx/issues/590
librpmostreecxxrs_la_CXXFLAGS = $(AM_CXXFLAGS) $(SANITIZER_FLAGS) $(rpmostree_common_cflags) -Wno-missing-declarations
librpmostreecxxrs_la_LIBADD = -lstdc++

ostreeextdir = $(DESTDIR)$(libexecdir)/libostree/ext

# And install our binary
install-rpmostree-hook:
	install -d -m 0755 $(DESTDIR)$(bindir)
	install -m 0755 -t $(DESTDIR)$(bindir) rpm-ostree
	install -d -m 0755 $(ostreeextdir)
	ln -Tsr -f $(DESTDIR)$(bindir)/rpm-ostree $(ostreeextdir)/ostree-ima-sign 
	ln -Tsr -f $(DESTDIR)$(bindir)/rpm-ostree $(ostreeextdir)/ostree-provisional-repair 
	ln -Tsr -f $(DESTDIR)$(bindir)/rpm-ostree $(ostreeextdir)/ostree-container
INSTALL_EXEC_HOOKS += install-rpmostree-hook

# Wraps `cargo test`.  This is always a debug non-release build;
# the main thing here is we still drop the `target` dir in our build
# directory, since we nominally support srcdir != builddir.
rust-test: $(binding_generated_sources) $(dbus_built_sources) $(librpmostree_rust_path) librpmostreecxxrs.la librpmostreeinternals.la
	LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:@abs_top_builddir@/.libs/" cargo test --workspace
rust-test-%: $(binding_generated_sources) $(dbus_built_sources) $(librpmostree_rust_path) librpmostreecxxrs.la librpmostreeinternals.la
	LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:@abs_top_builddir@/.libs/" cargo test --workspace -- $*
.PHONY: rust-test rust-test-%
