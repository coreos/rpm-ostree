%{
#include "config.h"
#include "rpmostree-scripts.h"
%}
struct RpmOstreePackageScriptHandler;
%language=ANSI-C
%define slot-name package_script
%define hash-function-name rpmostree_script_gperf_hash
%define lookup-function-name rpmostree_script_gperf_lookup
%readonly-tables
%omit-struct-type
%struct-type
%includes
%%
glibc.prein, RPMOSTREE_SCRIPT_ACTION_IGNORE
# We take over depmod/dracut etc.  It's `kernel` in C7 and kernel-core in F25+
kernel.posttrans, RPMOSTREE_SCRIPT_ACTION_IGNORE
kernel-core.posttrans, RPMOSTREE_SCRIPT_ACTION_IGNORE
# Legacy workaround
glibc-headers.prein, RPMOSTREE_SCRIPT_ACTION_IGNORE
# workaround for old bug?
coreutils.prein, RPMOSTREE_SCRIPT_ACTION_IGNORE
# Looks like legacy...
ca-certificates.prein, RPMOSTREE_SCRIPT_ACTION_IGNORE
libgcc.post, RPMOSTREE_SCRIPT_ACTION_IGNORE
setup.post, RPMOSTREE_SCRIPT_ACTION_IGNORE
pinentry.prein, RPMOSTREE_SCRIPT_ACTION_IGNORE
fedora-release.posttrans, RPMOSTREE_SCRIPT_ACTION_IGNORE
# These add the vagrant group which IMO is really
# a libvirt-user group
vagrant.prein, RPMOSTREE_SCRIPT_ACTION_IGNORE
vagrant-libvirt.prein, RPMOSTREE_SCRIPT_ACTION_IGNORE
bash.post, RPMOSTREE_SCRIPT_ACTION_TODO_SHELL_POSTTRANS
# Seems to be another case of legacy workaround
gdb.prein, RPMOSTREE_SCRIPT_ACTION_IGNORE
# Just does a daemon-reload  which we don't want offline
systemd.transfiletriggerin, RPMOSTREE_SCRIPT_ACTION_IGNORE
# https://bugzilla.redhat.com/show_bug.cgi?id=1473402
man-db.transfiletriggerin, RPMOSTREE_SCRIPT_ACTION_IGNORE
# https://src.fedoraproject.org/rpms/nfs-utils/pull-request/1
nfs-utils.post, RPMOSTREE_SCRIPT_ACTION_IGNORE
# https://bugzilla.redhat.com/show_bug.cgi?id=1199582
microcode_ctl.posttrans, RPMOSTREE_SCRIPT_ACTION_IGNORE
