# Explicitly create a workspace since we have libdnf-sys as a path
# dependency, and in the future we may use other sub-crates.
[workspace]

[package]
name = "rpmostree-rust"
version = "0.1.0"
authors = [
    "Colin Walters <walters@verbum.org>",
    "Jonathan Lebon <jonathan@jlebon.com>",
]
edition = "2021"
# See https://rust-lang.github.io/rfcs/2495-min-rust-version.html
# Usually, we try to keep this to no newer than current RHEL8 rust-toolset version.
# You can find the current versions from here:
# https://access.redhat.com/documentation/en-us/red_hat_developer_tools/1/
# However, right now we are bumping to 1.48 so we can use https://cxx.rs
#rust = "1.48"
links = "rpmostreeinternals"

# See https://github.com/cgwalters/cargo-vendor-filterer
[package.metadata.vendor-filter]
platforms = ["x86_64-unknown-linux-gnu"]
all-features = true
exclude-crate-paths = [ { name = "curl-sys", exclude = "curl" },
                        { name = "libz-sys", exclude = "src/zlib" },
                        { name = "libz-sys", exclude = "src/zlib-ng" },
                      ]

# This currently needs to duplicate the libraries in configure.ac
# until we unify on Cargo as our build system
[package.metadata.system-deps]
jsonglib = { name = "json-glib-1.0", version = "1" }
libarchive = "3.0"
libcurl = "7"
polkitgobject = { name = "polkit-gobject-1", version = "0" }
rpm = "4"

[dependencies]
anyhow = "1.0.58"
binread = "2.2.0"
bitflags = "1.3"
c_utf8 = "0.1.0"
camino = "1.0.9"
cap-std-ext = "0.26"
cap-std = { version = "0.25", features = ["fs_utf8"] }
cap-primitives = "0.25.2"
cap-tempfile = "0.25.1"
chrono = { version = "0.4.19", features = ["serde"] }
clap = { version = "3.2.6", features = ["derive"] }
curl = "0.4.43"
cxx = "1.0.69"
envsubst = "0.2.0"
either = "1.6.1"
env_logger = "0.9.0"
fail = { version = "0.5", features = ["failpoints"] }
fn-error-context = "0.2.0"
futures = "0.3.21"
indoc = "1.0.6"
indicatif = "0.16.2"
libc = "0.2.126"
libdnf-sys = { path = "rust/libdnf-sys", version = "0.1.0" }
maplit = "1.0"
memfd = "0.6.0"
nix = "0.24.1"
openat = "0.1.21"
openat-ext = "^0.2.3"
openssl = "0.10.40"
once_cell = "1.12.0"
os-release = "0.1.0"
ostree-ext = "0.8.0"
paste = "1.0"
phf = { version = "0.10", features = ["macros"] }
rand = "0.8.5"
rayon = "1.5.3"
regex = "1.5"
rpmostree-client = { path = "rust/rpmostree-client", version = "0.1.0" }
rust-ini = "0.18.0"
serde = { version = "1.0.137", features = ["derive"] }
serde_derive = "1.0.118"
serde_json = "1.0.81"
serde_yaml = "0.8.24"
systemd = "0.10.0"
tempfile = "3.3.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tokio = { version = "1.16.1", features = ["time", "process", "rt", "net"] }
xmlrpc = "0.15.1"
termcolor = "1.1.3"

[build-dependencies]
anyhow = "1.0"
system-deps = "6.0"

[lib]
name = "rpmostree_rust"
path = "rust/src/lib.rs"

[[bin]]
name = "rpm-ostree"
path = "rust/src/main.rs"

[profile.dev]
opt-level = 1 # No optimizations are too slow for us.

[profile.release]
# Unwinding across FFI boundaries is undefined behavior, and anyways, we're
# [crash-only](https://en.wikipedia.org/wiki/Crash-only_software)
panic = "abort"
# We assume we're being delivered via e.g. RPM which supports split debuginfo
debug = true
# We need this to avoid leaking symbols, see
# https://internals.rust-lang.org/t/rust-staticlibs-and-optimizing-for-size/5746
lto = "thin"

[features]
# Note: If you add a feature here, you also probably want to update utils.rs:get_features()
fedora-integration = []
rhsm = ["libdnf-sys/rhsm"]
bin-unit-tests = []
# ASAN+UBSAN
sanitizers = []

default = []
