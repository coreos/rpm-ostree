branches:
    - master
    - auto
    - try

context: f28-codestyle

required: true
container:
  image: registry.fedoraproject.org/fedora:28

tests:
  - ci/ci-commitmessage-submodules.sh
  - ci/codestyle.sh

---

# Build a Fedora CoreOS ostree
context: fcos29-cosa-build
inherit: true

# This test case wants unprivileged recursive containers
# which we don't have right now; so just provision a VM and do a
# docker --privileged run.
# https://github.com/openshift/origin/issues/21514
host:
  distro: fedora/29/atomic

tests:
  - ./ci/f29-cosa-build.sh

timeout: 60m

---

context: f28-primary
inherit: true

cluster:
  hosts:
    - name: vmcheck1
      distro: fedora/28/atomic
    - name: vmcheck2
      distro: fedora/28/atomic
    - name: vmcheck3
      distro: fedora/28/atomic
  container:
    image: registry.fedoraproject.org/fedora:28

env:
  HOSTS: vmcheck1 vmcheck2 vmcheck3
  # TODO use -fsanitize=address
  CFLAGS: '-fsanitize=undefined -fsanitize-undefined-trap-on-error -O2 -Wp,-D_FORTIFY_SOURCE=2'
  ASAN_OPTIONS: 'detect_leaks=0'  # Right now we're not fully clean, but this gets us use-after-free etc

tests:
  - ci/build-check.sh
  - ci/vmcheck-provision.sh
  - make vmcheck
  # make sure we're aware of any tests that were skipped
  - "grep -nr '^SKIP: ' vmcheck/ || :"

timeout: 60m

artifacts:
  - test-suite.log
  - config.log
  - vmcheck

---

inherit: true

context: c7-primary

required: true

cluster:
  hosts:
    - name: vmcheck1
      distro: centos/7/atomic/smoketested
    - name: vmcheck2
      distro: centos/7/atomic/smoketested
    - name: vmcheck3
      distro: centos/7/atomic/smoketested
  container:
    image: registry.centos.org/centos/centos:7

# We only want the sanitizers on Fedora
env:
    HOSTS: vmcheck1 vmcheck2 vmcheck3
    CFLAGS: ''

extra-repos:
  - name: atomic-centos-continuous
    baseurl: https://ci.centos.org/artifacts/sig-atomic/rdgo/centos-continuous/build
    gpgcheck: 0

tests:
  # we're still on devmapper here; we need to expand rootfs for tests
  - for vm in vmcheck{1..3}; do ssh $vm lvresize -r -L +5G atomicos/root; done
  - ci/vmcheck-provision.sh
  - ci/build-check.sh
  - make vmcheck

---

branches:
  - master
  - auto
  - try

# NB: when bumping 28 here, also bump fedora.repo, and compose script

context: f28-compose1

build: false

timeout: 35m

required: true

# This test case wants an "unprivileged container with bubblewrap",
# which we don't have right now; so just provision a VM and do a
# docker --privileged run.
host:
  distro: fedora/28/atomic
  # Compose tests are slow and should be parallelized
  specs:
    cpus: 4

env:
  RPMOSTREE_COMPOSE_TEST_FILTER: odd

# Copy yum.repos.d to get any injected repos from the host, which
# will point to a closer mirror.  Note we substitute $releasever
# since https://github.com/projectatomic/rpm-ostree/pull/875
tests:
  - docker run --privileged --rm
    -e RPMOSTREE_COMPOSE_TEST_FILTER
    -e RPMOSTREE_COMPOSE_TEST_USE_REPOS=/etc/yum.repos.d.host
    -v /etc/yum.repos.d:/etc/yum.repos.d.host:ro
    -v $(pwd):/srv/code -w /srv/code
    registry.fedoraproject.org/fedora:28 /bin/sh -c
    "cp /etc/yum.repos.d.host/* /etc/yum.repos.d/ && ./ci/build.sh && make install && ./tests/compose"

artifacts:
  - test-compose-logs

---

inherit: true
context: f28-compose2
env:
  RPMOSTREE_COMPOSE_TEST_FILTER: even

---

branches:
  - master
  - auto
  - try

context: f28-ex-container
build: false
timeout: 30m
required: false

# See the f28-compose context for why we do things this way.
host:
  distro: fedora/28/atomic

tests:
  - docker run --privileged --rm
    -e RPMOSTREE_COMPOSE_TEST_USE_REPOS=/etc/yum.repos.d.host
    -v /etc/yum.repos.d:/etc/yum.repos.d.host:ro
    -v $(pwd):/srv/code -w /srv/code
    registry.fedoraproject.org/fedora:28 /bin/sh -c
    "cp /etc/yum.repos.d.host/* /etc/yum.repos.d/ && ./ci/build.sh && make install && adduser unpriv && setfacl -m u:unpriv:rwX . && runuser -u unpriv ./tests/ex-container"

artifacts:
  - ex-container-logs

---

branches:
  - master
  - auto
  - try

context: rust-min-version-check
timeout: 30m

required: true
container:
  image: registry.fedoraproject.org/fedora:28

env:
  # this corresponds to the DTS rustc version we want to support
  RUST_MIN_VERSION: 1.29.2

tests:
  - ci/installdeps.sh
  - yum remove -y cargo
  - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain $RUST_MIN_VERSION -y
  - PATH=$HOME/.cargo/bin:$PATH ci/build.sh |& tee out.txt
  - grep $RUST_MIN_VERSION out.txt
  - grep "checking for cargo... $HOME/.cargo/bin/cargo" out.txt
  - grep "checking for rustc... $HOME/.cargo/bin/rustc" out.txt
